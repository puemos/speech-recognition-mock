!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define("SpeechRecognitionMock",[],e):"object"==typeof exports?exports.SpeechRecognitionMock=e():t.SpeechRecognitionMock=e()}(this,function(){return function(t){function e(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return t[i].call(r.exports,r,r.exports,e),r.l=!0,r.exports}var n={};return e.m=t,e.c=n,e.d=function(t,n,i){e.o(t,n)||Object.defineProperty(t,n,{configurable:!1,enumerable:!0,get:i})},e.n=function(t){var n=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(n,"a",n),n},e.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},e.p="",e(e.s=0)}([function(t,e,n){t.exports=n(1)},function(t,e,n){"use strict";function i(t){return{isFinal:!1,length:0,item:r}}function r(t){return{confidence:1,transcript:""}}Object.defineProperty(e,"__esModule",{value:!0});n.d(e,"SpeechRecognitionMock",function(){return s});var s=function(){function t(){this.listeners={},this.addEventListener("audiostart",this.onaudiostart),this.addEventListener("soundstart",this.onsoundstart),this.addEventListener("speechstart",this.onspeechstart),this.addEventListener("speechend",this.onspeechend),this.addEventListener("soundend",this.onsoundend),this.addEventListener("result",this.onresult),this.addEventListener("nomatch",this.onnomatch),this.addEventListener("error",this.onerror),this.addEventListener("start",this.onstart),this.addEventListener("end",this.onend)}return t.prototype.addEventListener=function(t,e,n){this.listeners[t]=this.listeners[t]||[],this.listeners[t].push(e)},t.prototype.dispatchEvent=function(t){var e=this;return!(t.type in this.listeners)||(this.listeners[t.type].filter(function(t){return"function"==typeof t}).forEach(function(n){n.call(e,t)}),!0)},t.prototype.removeEventListener=function(t,e,n){t in this.listeners&&(this.listeners[t]=this.listeners[t].filter(function(t){return t!==e}))},t.prototype.start=function(){if(this.started)throw new DOMException("Failed to execute 'start' on 'SpeechRecognition': recognition has already started.");this.started=!0;var t=document.createEvent("CustomEvent");t.initCustomEvent("start",!1,!1,null),this.dispatchEvent(t)},t.prototype.stop=function(){this.abort()},t.prototype.abort=function(){if(this.started){this.started=!1;var t=document.createEvent("CustomEvent");t.initCustomEvent("end",!1,!1,null),this.dispatchEvent(t)}},t.prototype.say=function(t,e,n){void 0===n&&(n=0);var s=function(t,e){return void 0===e&&(e=!1),{length:1,item:i,0:{item:r,length:1,isFinal:e,0:{confidence:.9,transcript:t}}}}(t,e),o=document.createEvent("CustomEvent");o.initCustomEvent("result",!1,!1,{}),o.resultIndex=n,o.results=s,o.interpretation=null,delete o.emma,this.dispatchEvent(o)},t}()}])});
//# sourceMappingURL=speech-recognition-mock.min.js.map